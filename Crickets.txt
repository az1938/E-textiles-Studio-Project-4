//Crickets

speed = 1

export var light = -1 
export var maxFrequencyMagnitude
export var maxFrequency

hues = array(pixelCount)
vals = array(pixelCount)

pos = 0
lastVal = 0

export var pic = makePIController(.1, .5, 400, 0,8400)

function makePIController(kp, ki, start, min, max) {
  var pic = array(5)
  pic[0] = kp
  pic[1] = ki
  pic[2] = start /  pic[3] = min
  pic[4] = max
  return pic
}

function calcPIController(pic, err) {
  pic[2] = clamp(pic[2] + err, pic[3], pic[4])
  return max(pic[0] * err + pic[1] * pic[2], .3)
}

export function beforeRender(delta) {
  sensitivity = calcPIController(pic, .5 - lastVal)

  pos = (pos + delta * speed) % pixelCount
  
  if (light == -1) simulateSound() 
  
  lastVal = vals[pos] = pow(maxFrequencyMagnitude * sensitivity, 2)
  
  hues[pos] = maxFrequency / 5000

  t1 = time(6.5 / 65.536)
}

export function render(index) {

  if (0<=index && index <=60)  {
    index = pixelCount - index
  i = (index + pos) % pixelCount

  h = hues[i]
  h += index / pixelCount / 4 + t1

  v = vals[i]
  v = v * v  // Gamma correction

  hsv(h, 0.5, 0.4)
}

  if (0<=index && index <=32)  {
  hsv(h, 0, 0)}
}

function simulateSound() { 
  t1 = time(10 / 65.536) 
  maxFrequency = 2000 * (1 + wave(t1)) * (0.7 + random(0.3)) 
  maxFrequencyMagnitude = log(1.05 + wave(17 * t1) * wave( 19 * t1) * wave(23 * t1)) 
  maxFrequencyMagnitude *= 0.7 + random(0.3)
}